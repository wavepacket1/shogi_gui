name: Rails RSpec Tests

on:
  workflow_dispatch:  # 手動実行トリガー
  push:
    paths-ignore:
      - 'frontend/**'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'frontend/**'
      - '**.md'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # タイムアウト設定を追加

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # 全履歴をフェッチして正確なコミット情報を取得

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Dockerイメージのキャッシュを追加
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    # 現在の GitHub Actions 環境では直接 docker-compose コマンドが使えるバージョンもあります
    - name: Check Docker and Docker Compose versions
      run: |
        docker --version
        docker compose version || echo "Docker Compose V2 not found"
        which docker-compose || echo "docker-compose command not found"

    - name: Install Docker Compose V1 if needed
      run: |
        if ! command -v docker-compose &> /dev/null; then
          echo "Installing Docker Compose V1..."
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
        fi

    - name: Debug DB migration files
      run: |
        ls -la
        if [ -d "backend" ]; then
          cd backend
          ls -la db/migrate/
        else
          echo "Backend directory not found in current location"
          ls -la
        fi

    - name: Build Docker Containers
      run: |
        docker compose -f docker-compose.yml build
      env:
        DOCKER_BUILDKIT: 1
        COMPOSE_DOCKER_CLI_BUILD: 1
        # キャッシュを利用するための設定
        DOCKER_BUILDKIT_CACHE: type=local,dest=/tmp/.buildx-cache,mode=max

    - name: Run tests
      run: |
        # データベースのセットアップと実行を分離して、エラー発生時に原因特定しやすくする
        docker compose -f docker-compose.yml run --rm backend bundle exec rails db:drop db:create db:schema:load
        docker compose -f docker-compose.yml run --rm backend bundle exec rspec --format documentation
      env:
        RAILS_LOG_TO_STDOUT: true
        RAILS_ENV: test
        
    - name: Display Docker logs on failure
      if: ${{ failure() }}
      run: |
        docker compose -f docker-compose.yml logs 